// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nK16SbD1uHwpGuyRoqAMNN
// Component: vb7UxSgigcOQ
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: anilgu949Hy0/component
import Countdown from "../../Countdown"; // plasmic-import: z3zAS5I9PFXG/component
import { useScreenVariants as useScreenVariantsonqwsGpBfm6K } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ONQWSGpBfm6K/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: nK16SbD1uHwpGuyRoqAMNN/projectcss
import sty from "./PlasmicShop.module.css"; // plasmic-import: vb7UxSgigcOQ/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: QM6vZD-IS0PE/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: AvuBveerA9hs/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: O9Uaz-soQdat/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: O9BNWTsi3y_D/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: omV8tM-UrKpt/icon
import logopng9YqBoXKtla6J from "./images/logopng.png"; // plasmic-import: 9yqBoXKtla6j/picture
import boatpngD02KSVAwkP from "./images/boatpng.png"; // plasmic-import: _D02kS-VAwkP/picture
import appleMax1JpegFrg94KvWotV from "./images/appleMax1Jpeg.jpg"; // plasmic-import: frg94KvWOT-v/picture
import salejpgRKg7Zhwb1HHe from "./images/salejpg.jpg"; // plasmic-import: RKg7zhwb1HHe/picture
import sale2JpegOcKgJlg61C0 from "./images/sale2Jpeg.jpg"; // plasmic-import: OCKgJLG61c_0/picture

createPlasmicElementProxy;

export const PlasmicShop__VariantProps = new Array();

export const PlasmicShop__ArgProps = new Array();

const $$ = {};

function PlasmicShop__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textarea.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "This is a text area."
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsonqwsGpBfm6K()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"shop"}
          data-plasmic-override={overrides.shop}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.shop
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bTly)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__bTqcn)}
              displayHeight={"61px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"61px"}
              src={{
                src: logopng9YqBoXKtla6J,
                fullWidth: 600,
                fullHeight: 600,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2OPuL
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    data-plasmic-name={"h3"}
                    data-plasmic-override={overrides.h3}
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, fontStyle: "italic" }}
                      >
                        {"Virtual Sound Industries"}
                      </span>
                    </React.Fragment>
                  </h3>
                }

                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
          </p.Stack>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___6Pv94)}
          >
            <Button2
              className={classNames("__wab_instance", sty.button2___8O3E4)}
              color={"clear"}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__ym2DF)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToHomepage"] = true
                  ? (() => {
                      const actionArgs = { destination: `/` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHomepage"] != null &&
                  typeof $steps["goToHomepage"] === "object" &&
                  typeof $steps["goToHomepage"].then === "function"
                ) {
                  $steps["goToHomepage"] = await $steps["goToHomepage"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__hAco)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lbd3X
                )}
              >
                {"Home\n"}
              </div>
            </Button2>
            <Button2
              className={classNames("__wab_instance", sty.button2__f0Er)}
              color={"clear"}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__ss8Bd)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToTrending"] = true
                  ? (() => {
                      const actionArgs = { destination: `/trending` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToTrending"] != null &&
                  typeof $steps["goToTrending"] === "object" &&
                  typeof $steps["goToTrending"].then === "function"
                ) {
                  $steps["goToTrending"] = await $steps["goToTrending"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__dJkUt)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lIvRy
                )}
              >
                {"Trending"}
              </div>
            </Button2>
            <Button2
              className={classNames("__wab_instance", sty.button2__zxL5K)}
              color={"clear"}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__fUhj)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToContact"] = true
                  ? (() => {
                      const actionArgs = { destination: `/contact` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToContact"] != null &&
                  typeof $steps["goToContact"] === "object" &&
                  typeof $steps["goToContact"].then === "function"
                ) {
                  $steps["goToContact"] = await $steps["goToContact"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__rkh4)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jxW7H
                )}
              >
                {"Contact"}
              </div>
            </Button2>
            <Button2
              className={classNames("__wab_instance", sty.button2__qxrN3)}
              color={"clear"}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__psNvt)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToShop"] = true
                  ? (() => {
                      const actionArgs = { destination: `/shop` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToShop"] != null &&
                  typeof $steps["goToShop"] === "object" &&
                  typeof $steps["goToShop"].then === "function"
                ) {
                  $steps["goToShop"] = await $steps["goToShop"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__yv4Mz)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iFvDa
                )}
              >
                {"Shop"}
              </div>
            </Button2>
            <Button2
              className={classNames("__wab_instance", sty.button2__blfQe)}
              color={"clear"}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__pwPgk)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToLogin"] = true
                  ? (() => {
                      const actionArgs = { destination: `/login` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToLogin"] != null &&
                  typeof $steps["goToLogin"] === "object" &&
                  typeof $steps["goToLogin"].then === "function"
                ) {
                  $steps["goToLogin"] = await $steps["goToLogin"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__iJnLd)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nsEbB
                )}
              >
                {"Log in"}
              </div>
            </Button2>
            <Button2
              className={classNames("__wab_instance", sty.button2___7NvPj)}
              endIcon={
                <Icon38Icon
                  className={classNames(projectcss.all, sty.svg__twzOo)}
                  role={"img"}
                />
              }
              onClick={async event => {
                const $steps = {};
                $steps["goToRegister"] = true
                  ? (() => {
                      const actionArgs = { destination: `/register` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToRegister"] != null &&
                  typeof $steps["goToRegister"] === "object" &&
                  typeof $steps["goToRegister"].then === "function"
                ) {
                  $steps["goToRegister"] = await $steps["goToRegister"];
                }
              }}
              startIcon={
                <ChecksvgIcon
                  className={classNames(projectcss.all, sty.svg__jZ3Eq)}
                  role={"img"}
                />
              }
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wLAmt
                )}
              >
                {"Sign up"}
              </div>
            </Button2>
          </p.Stack>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ryQrE
            )}
          >
            <React.Fragment>
              <React.Fragment>{""}</React.Fragment>
              {
                <h4
                  data-plasmic-name={"h4"}
                  data-plasmic-override={overrides.h4}
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, fontStyle: "italic" }}
                    >
                      {"Top Headphone/Earphone company in India"}
                    </span>
                  </React.Fragment>
                </h4>
              }

              <React.Fragment>{""}</React.Fragment>
            </React.Fragment>
          </div>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img___2TzS0)}
            displayHeight={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "143px"
                : "220px"
            }
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "136px"
                : "220px"
            }
            loading={"lazy"}
            src={{
              src: boatpngD02KSVAwkP,
              fullWidth: 750,
              fullHeight: 750,
              aspectRatio: undefined
            }}
          />

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__wkKf7)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "141px"
                  : "220px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "142px"
                  : "220px"
              }
              loading={"lazy"}
              src={{
                src: appleMax1JpegFrg94KvWotV,
                fullWidth: 1000,
                fullHeight: 1000,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.freeBox__jfuio)}>
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__xzcR)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wvw0L)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jpAzY)}
                      displayHeight={"44px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"44px"}
                      src={{
                        src: logopng9YqBoXKtla6J,
                        fullWidth: 600,
                        fullHeight: 600,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__op6T0)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__beu7L
                        )}
                      >
                        {"Connect with us"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7Es0E
                        )}
                      >
                        <IconIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9Mhjb
                          )}
                          role={"img"}
                        />

                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__nk4Sk)}
                          role={"img"}
                        />

                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__juO3F)}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column__kRcQ)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__exwvK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9MxDl
                      )}
                    >
                      {"Product"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__vAafk
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__nbB)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__ffil2)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__o1QOc
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___32Fv9
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__zGT6)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__hlBbb)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kPwo
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___17Fmc
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__uiox9)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__ypCso)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d0G4H
                        )}
                      >
                        {"Integrations"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__d1VvH
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___04F4J
                          )}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___5KLAt
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__esud2
                        )}
                      >
                        {"Insights"}
                      </div>
                    </Button2>
                  </p.Stack>
                  <textarea
                    data-plasmic-name={"textarea"}
                    data-plasmic-override={overrides.textarea}
                    className={classNames(
                      projectcss.all,
                      projectcss.textarea,
                      sty.textarea
                    )}
                    onChange={e => {
                      p.generateStateOnChangeProp($state, [
                        "textarea",
                        "value"
                      ])(e.target.value);
                    }}
                    ref={ref => {
                      $refs["textarea"] = ref;
                    }}
                    value={
                      p.generateStateValueProp($state, ["textarea", "value"]) ??
                      ""
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column___5SXSs)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__l5LTw)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z9CIf
                      )}
                    >
                      {"Support"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__bOtQg
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__bw3V2)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__klVm)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ol5Fk
                        )}
                      >
                        {"Documentation"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__h85WD
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__wjum0)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__eqki4)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cj41P
                        )}
                      >
                        {"FAQs"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__wcGPv
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__lgzfB)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4FfQb
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iDAul
                        )}
                      >
                        {"Status"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column__uBcF6)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0Yr2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x7M7
                      )}
                    >
                      {"Company"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__zpmap
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___8F8Sb
                          )}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__u7RzU)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__c4L8J
                        )}
                      >
                        {"About"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___3IcbT
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__laveb)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__wWm1X)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mI1Na
                        )}
                      >
                        {"Contact us"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames("__wab_instance", sty.button2__uBt)}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__pwdIb)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__buKgA)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f1BwV
                        )}
                      >
                        {"Careers"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___24Fo3
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__nWz8I)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___51Qk3
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1YAj8
                        )}
                      >
                        {"Media"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
              </p.Stack>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hukPe
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "AirPods Max with Smart Case and ANC, Transparency mode, Spatial audio, upto 20 hrs of playtime, Sky Blue(491936176)\nSpecial price\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u20b949,990"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ textDecorationLine: "line-through" }}
                >
                  {"\u20b959,900"}
                </span>
                <React.Fragment>{" 17% off\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#E60A0A" }}
                >
                  {"Hurry! Only few left."}
                </span>
              </React.Fragment>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6Flvn
              )}
            >
              {"\r\n"}
            </div>
            <Button2
              className={classNames("__wab_instance", sty.button2__seXi)}
              onClick={async event => {
                const $steps = {};
                $steps["goToProduct"] = true
                  ? (() => {
                      const actionArgs = { destination: `/product` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToProduct"] != null &&
                  typeof $steps["goToProduct"] === "object" &&
                  typeof $steps["goToProduct"].then === "function"
                ) {
                  $steps["goToProduct"] = await $steps["goToProduct"];
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hhVrg
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Buy"
                  : "Buy"}
              </div>
            </Button2>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iGdq
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "boAt Rockerz 551 ANC with Hybrid ANC, 100 HRS Playback, 40mm Drivers & ASAP Charge Bluetooth Headset  (Sage Green, On the Ear)\nSpecial price\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u20b93,499"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ textDecorationLine: "line-through" }}
                >
                  {"\u20b97,990"}
                </span>
                <React.Fragment>{" 56% off\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#EC0D0D" }}
                >
                  {"Hurry! Only few left."}
                </span>
              </React.Fragment>
            </div>
            <Button2
              className={classNames("__wab_instance", sty.button2__wp49U)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__snzOh
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Buy"
                  : "Buy"}
              </div>
            </Button2>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__icQ2J)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "131px"
                  : "220px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "134px"
                  : "220px"
              }
              loading={"lazy"}
              src={{
                src: salejpgRKg7Zhwb1HHe,
                fullWidth: 339,
                fullHeight: 360,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oh8Cw
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <React.Fragment>
                    {
                      "BASS BLING Newest SH-12 Wireless Headphone With Mic For All Smartphones Bluetooth with mic Bluetooth & Wired Headset  (Black, On the Ear)\nSpecial price\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u20b91,990"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ textDecorationLine: "line-through" }}
                  >
                    {"\u20b92,999"}
                  </span>
                  <React.Fragment>{" 33% off\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E60A0A" }}
                  >
                    {"Hurry! Only few left."}
                  </span>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <React.Fragment>
                    {
                      "BASS BLING Newest SH-12 Wireless Headphone With Mic For All Smartphones Bluetooth with mic Bluetooth & Wired Headset  (Black, On the Ear) \nSpecial price\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u20b91,990"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ textDecorationLine: "line-through" }}
                  >
                    {"\u20b92,999"}
                  </span>
                  <React.Fragment>{" 33% off\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E60A0A" }}
                  >
                    {"Hurry! Only few left."}
                  </span>
                </React.Fragment>
              )}
            </div>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__qYoWm)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "140px"
                  : "220px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "140px"
                  : "220px"
              }
              loading={"lazy"}
              src={{
                src: sale2JpegOcKgJlg61C0,
                fullWidth: 1500,
                fullHeight: 1500,
                aspectRatio: undefined
              }}
            />

            <Button2
              className={classNames("__wab_instance", sty.button2__w25Bm)}
            >
              {"Buy"}
            </Button2>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__w3Iwg
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <React.Fragment>
                    {
                      "SpinBot Ranger HX300 Bluetooth Gaming Headphones with 50ms Low Latency & RGB Lights Bluetooth Gaming Headset  (Black, On the Ear)\nSpecial price\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u20b91,990"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ textDecorationLine: "line-through" }}
                  >
                    {"\u20b92,999"}
                  </span>
                  <React.Fragment>{" 33% off\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E30B0B" }}
                  >
                    {"Hurry! Only few left."}
                  </span>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <React.Fragment>
                    {
                      "SpinBot Ranger HX300 Bluetooth Gaming Headphones with 50ms Low Latency & RGB Lights Bluetooth Gaming Headset  (Black, On the Ear)\nSpecial price\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u20b91,990"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ textDecorationLine: "line-through" }}
                  >
                    {"\u20b92,999"}
                  </span>
                  <React.Fragment>{" 33% off\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E30B0B" }}
                  >
                    {"Hurry! Only few left."}
                  </span>
                </React.Fragment>
              )}
            </div>
            <Button2
              className={classNames("__wab_instance", sty.button2__uaP9D)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qq5Qz
                )}
              >
                {"Buy"}
              </div>
            </Button2>
          </section>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__dcNw8
            )}
          >
            {"SALE ends in....."}
          </div>
          <Countdown
            data-plasmic-name={"countdown"}
            data-plasmic-override={overrides.countdown}
            className={classNames("__wab_instance", sty.countdown)}
            targetTimeUtc={"2023-12-10T23:26:25.224Z"}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__blarT
            )}
          >
            {""}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  shop: ["shop", "h3", "h4", "section", "columns", "textarea", "countdown"],
  h3: ["h3"],
  h4: ["h4"],
  section: ["section", "columns", "textarea"],
  columns: ["columns", "textarea"],
  textarea: ["textarea"],
  countdown: ["countdown"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicShop__ArgProps,
          internalVariantPropNames: PlasmicShop__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicShop__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "shop") {
    func.displayName = "PlasmicShop";
  } else {
    func.displayName = `PlasmicShop.${nodeName}`;
  }
  return func;
}

export const PlasmicShop = Object.assign(
  // Top-level PlasmicShop renders the root element
  makeNodeComponent("shop"),
  {
    // Helper components rendering sub-elements
    h3: makeNodeComponent("h3"),
    h4: makeNodeComponent("h4"),
    section: makeNodeComponent("section"),
    columns: makeNodeComponent("columns"),
    textarea: makeNodeComponent("textarea"),
    countdown: makeNodeComponent("countdown"),
    // Metadata about props expected for PlasmicShop
    internalVariantProps: PlasmicShop__VariantProps,
    internalArgProps: PlasmicShop__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicShop;
/* prettier-ignore-end */
