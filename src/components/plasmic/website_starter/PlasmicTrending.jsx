// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nK16SbD1uHwpGuyRoqAMNN
// Component: frv2CjZAG6uX
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: anilgu949Hy0/component
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import { useScreenVariants as useScreenVariantsonqwsGpBfm6K } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ONQWSGpBfm6K/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: nK16SbD1uHwpGuyRoqAMNN/projectcss
import sty from "./PlasmicTrending.module.css"; // plasmic-import: frv2CjZAG6uX/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: QM6vZD-IS0PE/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: AvuBveerA9hs/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: O9Uaz-soQdat/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: O9BNWTsi3y_D/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: omV8tM-UrKpt/icon
import logopng9YqBoXKtla6J from "./images/logopng.png"; // plasmic-import: 9yqBoXKtla6j/picture
import trend1JpgFDtwJnJiGe1P from "./images/trend1Jpg.jpg"; // plasmic-import: fDtwJNJiGe1p/picture
import frame003JpgPgsUgTwg3SEn from "./images/frame003Jpg.jpg"; // plasmic-import: pgsUgTWG3sEn/picture
import frame001JpgXEbk4UTdWT2 from "./images/frame001Jpg.png"; // plasmic-import: XEbk4UTdW-T2/picture

createPlasmicElementProxy;

export const PlasmicTrending__VariantProps = new Array();

export const PlasmicTrending__ArgProps = new Array();

const $$ = {};

function PlasmicTrending__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: p.generateOnMutateForSpec(
          "currentSlide",
          SliderWrapper_Helpers
        )
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsonqwsGpBfm6K()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"trending"}
          data-plasmic-override={overrides.trending}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.trending
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___4OhDg)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__p33D)}
            >
              <Button2
                className={classNames("__wab_instance", sty.button2___6WWmj)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__guzR7)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToHomepage"] = true
                    ? (() => {
                        const actionArgs = { destination: `/` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHomepage"] != null &&
                    typeof $steps["goToHomepage"] === "object" &&
                    typeof $steps["goToHomepage"].then === "function"
                  ) {
                    $steps["goToHomepage"] = await $steps["goToHomepage"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__dBiIs)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1SeVz
                  )}
                >
                  {"Home\n"}
                </div>
              </Button2>
              <Button2
                className={classNames("__wab_instance", sty.button2__fnHtr)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__enHas)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToTrending"] = true
                    ? (() => {
                        const actionArgs = { destination: `/new-page-4` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToTrending"] != null &&
                    typeof $steps["goToTrending"] === "object" &&
                    typeof $steps["goToTrending"].then === "function"
                  ) {
                    $steps["goToTrending"] = await $steps["goToTrending"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__pjEph)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yBcuw
                  )}
                >
                  {"Trending"}
                </div>
              </Button2>
              <Button2
                className={classNames("__wab_instance", sty.button2__i3Fw6)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___6V72E)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToContact"] = true
                    ? (() => {
                        const actionArgs = { destination: `/new-page-5` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToContact"] != null &&
                    typeof $steps["goToContact"] === "object" &&
                    typeof $steps["goToContact"].then === "function"
                  ) {
                    $steps["goToContact"] = await $steps["goToContact"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__wv9Ph)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__i5JZg
                  )}
                >
                  {"Contact"}
                </div>
              </Button2>
              <Button2
                className={classNames("__wab_instance", sty.button2__lybRa)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__wYgiJ)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToShop"] = true
                    ? (() => {
                        const actionArgs = { destination: `/new-page` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToShop"] != null &&
                    typeof $steps["goToShop"] === "object" &&
                    typeof $steps["goToShop"].then === "function"
                  ) {
                    $steps["goToShop"] = await $steps["goToShop"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__zE9Ep)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b4Nl1
                  )}
                >
                  {"Shop"}
                </div>
              </Button2>
              <Button2
                className={classNames("__wab_instance", sty.button2__i9PvH)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___2ArZm)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToLogin"] = true
                    ? (() => {
                        const actionArgs = { destination: `/new-page-2` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToLogin"] != null &&
                    typeof $steps["goToLogin"] === "object" &&
                    typeof $steps["goToLogin"].then === "function"
                  ) {
                    $steps["goToLogin"] = await $steps["goToLogin"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__eba50)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cPruk
                  )}
                >
                  {"Log in"}
                </div>
              </Button2>
              <Button2
                className={classNames("__wab_instance", sty.button2__etn0R)}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___9NpN)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};
                  $steps["goToRegister"] = true
                    ? (() => {
                        const actionArgs = { destination: `/new-page-3` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            location.assign(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToRegister"] != null &&
                    typeof $steps["goToRegister"] === "object" &&
                    typeof $steps["goToRegister"].then === "function"
                  ) {
                    $steps["goToRegister"] = await $steps["goToRegister"];
                  }
                }}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__nwOdF)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jmOkR
                  )}
                >
                  {"Sign up"}
                </div>
              </Button2>
            </p.Stack>
          </div>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__wXnW)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__pwIwk)}
              displayHeight={"61px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"61px"}
              src={{
                src: logopng9YqBoXKtla6J,
                fullWidth: 600,
                fullHeight: 600,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wwQm8
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    data-plasmic-name={"h3"}
                    data-plasmic-override={overrides.h3}
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, fontStyle: "italic" }}
                      >
                        {"Virtual Sound Industries"}
                      </span>
                    </React.Fragment>
                  </h3>
                }

                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rhboj)}
            >
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__sTmnt)}>
                  <button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__d7S9S)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__bPqy8)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__bTIuU)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fdUnd
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                </div>
              ) : null}
            </p.Stack>
          </p.Stack>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__sFYgH
            )}
          >
            {"What's Trending?"}
          </div>
          {(() => {
            const child$Props = {
              beforeChange: p.generateStateOnChangePropForCodeComponents(
                $state,
                "currentSlide",
                ["sliderCarousel", "currentSlide"],
                SliderWrapper_Helpers
              ),
              className: classNames("__wab_instance", sty.sliderCarousel),
              initialSlide: p.generateStateValueProp($state, [
                "sliderCarousel",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel__slider"]
            };
            p.initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel"}
                data-plasmic-override={overrides.sliderCarousel}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ubVan)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pXrQb)}
                    displayHeight={"290px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"411px"}
                    src={{
                      src: trend1JpgFDtwJnJiGe1P,
                      fullWidth: 1600,
                      fullHeight: 900,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__wcxlS)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__d9Ps8)}
                    displayHeight={"287px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"412px"}
                    src={{
                      src: frame003JpgPgsUgTwg3SEn,
                      fullWidth: 2500,
                      fullHeight: 1875,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__zlSjt)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jmNBq)}
                    displayHeight={"283px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: frame001JpgXEbk4UTdWT2,
                      fullWidth: 3200,
                      fullHeight: 2048,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </SliderWrapper>
            );
          })()}
          <h1
            data-plasmic-name={"h1"}
            data-plasmic-override={overrides.h1}
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1
            )}
          >
            {"What's going on?"}
          </h1>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__xxu5P
            )}
          >
            {
              "Here are some of the latest news on headphones:\n\n>Sony WH-1000XM5 headphones fall back to $328 in early Black Friday deal. Sony WH1000XM5 headphones\n>Sony's WH-1000XM5 ANC headphones drop to $330.\n>Bose QuietComfort Ultra Headphones review: A new spin on a reliable formula. Bose QuietComfort Ultra Headphones\n>Could MEMS be the next big leap in headphone technology?\n>The 22 best Prime Day deals on headphones: Save on AirPods, Sony, Beats, Bose and more.\n>These are just a few of the many new stories about headphones that have been published in recent weeks. For more news and information, please      check out the following websites:"
            }
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__a8QqF)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__sUnJt)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fYeDw)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gr6Zj)}
                    displayHeight={"44px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"44px"}
                    src={{
                      src: logopng9YqBoXKtla6J,
                      fullWidth: 600,
                      fullHeight: 600,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__o8MwP)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__llhqf
                      )}
                    >
                      {"Connect with us"}
                    </div>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dvgX9)}
                    >
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__lrMVn)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__fVwo5)}
                        role={"img"}
                      />

                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___6PLW)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__i1Ci2)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ehsZd)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Gjk7
                    )}
                  >
                    {"Product"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__vtyX2)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__c9Bfu)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__kddpg)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1EIr8
                      )}
                    >
                      {"Pricing"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__d3YgN)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__zBO)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__ybbGh)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ulAie
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__cgMaA)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___3LNSy)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__ldkbO)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pnJBs
                      )}
                    >
                      {"Integrations"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__z4Fuj)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__rntQs)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___40Rmu)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cm0Bb
                      )}
                    >
                      {"Insights"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__nwT9N)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pr8Bx)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d7Qi3
                    )}
                  >
                    {"Support"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__jIbe)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__xNBqD)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__iuWsL)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__csQek
                      )}
                    >
                      {"Documentation"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__haz1Y)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__iiQcm)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__jAcux)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___89Dem
                      )}
                    >
                      {"FAQs"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___6Ukcx
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__i28La)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__zqJJp)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wvE9U
                      )}
                    >
                      {"Status"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__tOgRb)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ulsK2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bLuLd
                    )}
                  >
                    {"Company"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__rbzcG)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__zyaJb)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__i9Jmd)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qEg6Q
                      )}
                    >
                      {"About"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__pgyO8)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__kqlI2)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__t9WbD)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9EMq
                      )}
                    >
                      {"Contact us"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__wo9KK)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__kikq)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__l5Wzi)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__en8KI
                      )}
                    >
                      {"Careers"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__pwruS)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__vjEat)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__l5Dd8)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3XTt5
                      )}
                    >
                      {"Media"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  trending: ["trending", "h3", "button", "sliderCarousel", "h1", "columns"],
  h3: ["h3"],
  button: ["button"],
  sliderCarousel: ["sliderCarousel"],
  h1: ["h1"],
  columns: ["columns"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTrending__ArgProps,
          internalVariantPropNames: PlasmicTrending__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTrending__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "trending") {
    func.displayName = "PlasmicTrending";
  } else {
    func.displayName = `PlasmicTrending.${nodeName}`;
  }
  return func;
}

export const PlasmicTrending = Object.assign(
  // Top-level PlasmicTrending renders the root element
  makeNodeComponent("trending"),
  {
    // Helper components rendering sub-elements
    h3: makeNodeComponent("h3"),
    button: makeNodeComponent("button"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    h1: makeNodeComponent("h1"),
    columns: makeNodeComponent("columns"),
    // Metadata about props expected for PlasmicTrending
    internalVariantProps: PlasmicTrending__VariantProps,
    internalArgProps: PlasmicTrending__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTrending;
/* prettier-ignore-end */
